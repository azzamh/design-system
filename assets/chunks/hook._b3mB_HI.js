var e=Object.defineProperty;var i=(t,o,s)=>o in t?e(t,o,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[o]=s;var r=(t,o,s)=>(i(t,typeof o!="symbol"?o+"":o,s),s);async function a(t,...o){try{return await t(...o)!==!1}catch(s){return!1}}async function h(t,...o){let s=!0;for(const n of t)if(s=await a(n,...o),!s)break;return s}class c{constructor(){r(this,"hooks");this.hooks=[]}add(o){return this.hooks.unshift(o),this}remove(o){const s=this.hooks.indexOf(o);return s>-1&&this.hooks.splice(s,1),this}async run(...o){return await h(this.hooks,...o)}}export{c as H,h as r};
