const o=globalThis.URL,c=globalThis.URLSearchParams,h=function(e,n,t){const s=new o(e);if(!n&&!t)return s;throw new Error("parseQueryString and slashesDenoteHost are unsupported")},f=function(e,n){const t=new o(n,new o(e,"resolve://"));if(t.protocol==="resolve:"){const{pathname:s,search:a,hash:r}=t;return s+a+r}return t.toString()},i=function(e){return{protocol:e.protocol,hostname:e.hostname,hash:e.hash,search:e.search,pathname:e.pathname,path:e.pathname+e.search||"",href:e.href,port:e.port,auth:e.username&&e.username+e.password?":"+e.password:""}},p=function(e,n){let t;if(typeof e=="string")t=new o(e);else if(e instanceof o)t=e;else throw new TypeError("format urlObject is not supported");return n&&(n.auth===!1&&(t.username="",t.password=""),n.fragment===!1&&(t.hash=""),n.search===!1&&(t.search="")),t.toString()},m=function(e){return e},w=function(e){return e},d=function(e){return new o(e)},u=function(e){return typeof e=="string"&&(e=new o(e)),e.pathname},g={URL:o,URLSearchParams:c,domainToASCII:m,domainToUnicode:w,fileURLToPath:u,format:p,parse:h,pathToFileURL:d,resolve:f,urlToHttpOptions:i};export{o as URL,c as URLSearchParams,g as default,m as domainToASCII,w as domainToUnicode,u as fileURLToPath,p as format,h as parse,d as pathToFileURL,f as resolve,i as urlToHttpOptions};
