const a="A-Za-z",r="\\d",o="\\s",$="!\"#$%&'()*+,./:;<=>?@[\\\\\\]^_`{|}~-",P=`${a}`,u=`${r}`,i=`${a}${r}`,A=`${a}${r}${o}`,l=`${a}${r}${o}${$}`,S=`${a}${o}`,_=`${a}${o}${$}`,m=`${r}${o}`,p=`${r}${o}${$}`,R={num:u,numeric:u,digit:u,alpha:P,"alpha-num":i,"alpha-num-space":A,"alpha-num-space-symbol":l,"alpha-numeric":i,"alpha-numeric-space":A,"alpha-numeric-space-symbol":l,"alpha-space":S,"alpha-space-symbol":_,"num-space":m,"num-space-symbol":p,"numeric-space":m,"numeric-space-symbol":p,"non-numeric":_,"non-alpha":p,text:l};function g(t,e){var n;if(!t)return!0;try{const s=(n=R[t.toLowerCase()])!=null?n:t;return new RegExp(`^[${s}]+$`).test(e)}catch(s){return!0}}function L(t,e){var n;if(!t)return e;try{const s=(n=R[t.toLowerCase()])!=null?n:t,c=new RegExp(`[^${s}]+`,"g");return e.replaceAll(c,"")}catch(s){return e}}function d(t,e){if(e.data&&!g(t,e.data)&&(e.preventDefault(),e.inputType==="insertFromPaste")){const n=e.target,s=n.value,c=L(t,e.data),E=n.selectionStart,h=n.selectionEnd,C=`${s.slice(0,E)}${c}${s.slice(h)}`;try{n.value=C,n.dispatchEvent(new InputEvent("input")),n.setSelectionRange(c.length+E,c.length+E)}catch(M){}}}export{d as c,g as i,L as r};
