import{p as n}from"./chunks/InputRange.3c8f4c8c.js";import{r as D,L as b,p as v,Q as e,B as o,G as s,z as y,u as p,X as t,x as C,i as F}from"./chunks/framework.f0e3e228.js";import"./chunks/theme.9e82a338.js";import"./chunks/index.ee0e06e5.js";import"./chunks/throttle.77eff498.js";import"./chunks/debounce.425ad733.js";import"./chunks/toNumber.09abc7f0.js";import"./chunks/isSymbol.4326927f.js";import"./chunks/isObjectLike.53b0037d.js";const x=t('<h1 id="input-range" tabindex="-1">Input Range <a class="header-anchor" href="#input-range" aria-label="Permalink to &quot;Input Range&quot;">​</a></h1><blockquote><p>Range input slider.</p></blockquote><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><h3 id="simple-usage" tabindex="-1">Simple Usage <a class="header-anchor" href="#simple-usage" aria-label="Permalink to &quot;Simple Usage&quot;">​</a></h3>',4),A=t(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-range</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="with-min-max-step" tabindex="-1">With min, max &amp; step <a class="header-anchor" href="#with-min-max-step" aria-label="Permalink to &quot;With min, max &amp; step&quot;">​</a></h3>`,2),T=t(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-range</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">min</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">max</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">100</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">step</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">25</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="multiple-mode" tabindex="-1">Multiple Mode <a class="header-anchor" href="#multiple-mode" aria-label="Permalink to &quot;Multiple Mode&quot;">​</a></h2>`,2),f=t(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-range</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">multiple</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="disabled-state" tabindex="-1">Disabled State <a class="header-anchor" href="#disabled-state" aria-label="Permalink to &quot;Disabled State&quot;">​</a></h2>`,2),q=t(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-range</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">disabled</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="readonly-state" tabindex="-1">Readonly State <a class="header-anchor" href="#readonly-state" aria-label="Permalink to &quot;Readonly State&quot;">​</a></h2>`,2),S=t(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-range</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="binding-v-model" tabindex="-1">Binding v-model <a class="header-anchor" href="#binding-v-model" aria-label="Permalink to &quot;Binding v-model&quot;">​</a></h2>`,2),P=s("p",null,[s("strong",null,"result:")],-1),E={class:"truncate"},k=t(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-range</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">result</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="v-model-in-multiple-mode" tabindex="-1">v-model in multiple mode <a class="header-anchor" href="#v-model-in-multiple-mode" aria-label="Permalink to &quot;v-model in multiple mode&quot;">​</a></h3><p>There are 2 ways to use v-model in <code>multiple</code> mode.</p><h4 id="_1-using-basic-v-model" tabindex="-1">1. Using basic v-model <a class="header-anchor" href="#_1-using-basic-v-model" aria-label="Permalink to &quot;1. Using basic v-model&quot;">​</a></h4><p>You can use basic <code>v-model</code> to handle multiple range input, The value will be tuple of number, <code>[start, end]</code></p>`,5),V=s("p",null,[s("strong",null,"result:")],-1),I={class:"truncate"},N=t(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-range</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">result</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">multiple</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h4 id="_2-using-v-model-start-and-v-model-end" tabindex="-1">2. using v-model:start and v-model:end <a class="header-anchor" href="#_2-using-v-model-start-and-v-model-end" aria-label="Permalink to &quot;2. using v-model:start and v-model:end&quot;">​</a></h4><p>You can specific binding the value using <code>v-model:start</code> or <code>v-model:end</code></p>`,3),R=s("p",null,[s("strong",null,"start:")],-1),B={class:"truncate"},U=s("p",null,[s("strong",null,"end:")],-1),w={class:"truncate"},M=t(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-range</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">v-model:start</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">start</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">v-model:end</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">end</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">multiple</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table><thead><tr><th>Props</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th>Description</th></tr></thead><tbody><tr><td><code>min</code></td><td style="text-align:center;"><code>Number</code></td><td style="text-align:center;"><code>0</code></td><td>Lowest value in range</td></tr><tr><td><code>max</code></td><td style="text-align:center;"><code>Number</code></td><td style="text-align:center;"><code>100</code></td><td>Highest value in range</td></tr><tr><td><code>step</code></td><td style="text-align:center;"><code>Number</code></td><td style="text-align:center;"><code>1</code></td><td>Step movement</td></tr><tr><td><code>multiple</code></td><td style="text-align:center;"><code>Boolean</code></td><td style="text-align:center;"><code>false</code></td><td>Enable multiple mode</td></tr><tr><td><code>disabled</code></td><td style="text-align:center;"><code>Boolean</code></td><td style="text-align:center;"><code>false</code></td><td>Disabled state</td></tr><tr><td><code>readonly</code></td><td style="text-align:center;"><code>Boolean</code></td><td style="text-align:center;"><code>false</code></td><td>Readonly state</td></tr><tr><td><code>error</code></td><td style="text-align:center;"><code>Boolean</code></td><td style="text-align:center;"><code>false</code></td><td>Error state</td></tr><tr><td><code>modelValue</code></td><td style="text-align:center;"><code>Number</code></td><td style="text-align:center;"><code>-</code></td><td>v-model value</td></tr><tr><td><code>start</code></td><td style="text-align:center;"><code>Number</code></td><td style="text-align:center;"><code>-</code></td><td>v-model:start value</td></tr><tr><td><code>end</code></td><td style="text-align:center;"><code>Number</code></td><td style="text-align:center;"><code>-</code></td><td>v-model:end value</td></tr></tbody></table><h3 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;Slots&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td colspan="2" class="text-center">There no slots here</td></tr></tbody></table><h3 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Arguments</th><th>Description</th></tr></thead><tbody><tr><td><code>change</code></td><td><code>Number</code> | <code>[Number, Number]</code></td><td>Event when value changed</td></tr></tbody></table><h2 id="see-also" tabindex="-1">See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;See Also&quot;">​</a></h2><ul><li><a href="/design-system/components/input/">Input</a></li><li><a href="/design-system/components/strengthbar/">Strengthbar</a></li></ul>`,10),Z=JSON.parse('{"title":"Input Range · Components","description":"Range input slider.","frontmatter":{"title":"Input Range · Components","description":"Range input slider."},"headers":[],"relativePath":"components/input-range/index.md","filePath":"components/input-range/index.md"}'),L={name:"components/input-range/index.md"},$=Object.assign(L,{setup(O){const r=D(50),d=D([30,70]),i=D(0),u=D(100);return(W,a)=>{var m,h,_,g;const l=b("preview");return C(),v("div",null,[x,e(l,{class:"flex-col"},{default:o(()=>[e(n)]),_:1}),A,e(l,{class:"flex-col"},{default:o(()=>[e(n,{min:"0",max:"100",step:"25"})]),_:1}),T,e(l,{class:"flex-col"},{default:o(()=>[e(n,{multiple:""})]),_:1}),f,e(l,{class:"flex-col"},{default:o(()=>[e(n,{disabled:""})]),_:1}),q,e(l,{class:"flex-col"},{default:o(()=>[e(n,{readonly:""})]),_:1}),S,e(l,{class:"flex-col"},{default:o(()=>[e(n,{modelValue:p(r),"onUpdate:modelValue":a[0]||(a[0]=c=>F(r)?r.value=c:null)},null,8,["modelValue"])]),_:1}),P,s("pre",E,[s("code",null,y((m=p(r))!=null?m:"-"),1)]),k,e(l,{class:"flex-col"},{default:o(()=>[e(n,{modelValue:p(d),"onUpdate:modelValue":a[1]||(a[1]=c=>F(d)?d.value=c:null),multiple:""},null,8,["modelValue"])]),_:1}),V,s("pre",I,[s("code",null,y((h=p(d))!=null?h:"-"),1)]),N,e(l,{class:"flex-col"},{default:o(()=>[e(n,{start:p(i),"onUpdate:start":a[2]||(a[2]=c=>F(i)?i.value=c:null),end:p(u),"onUpdate:end":a[3]||(a[3]=c=>F(u)?u.value=c:null),multiple:""},null,8,["start","end"])]),_:1}),R,s("pre",B,[s("code",null,y((_=p(i))!=null?_:"-"),1)]),U,s("pre",w,[s("code",null,y((g=p(u))!=null?g:"-"),1)]),M])}}});export{Z as __pageData,$ as default};
