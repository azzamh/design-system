import{_ as z}from"./chunks/Button.vue_vue_type_script_setup_true_lang.6548455d.js";import"./chunks/Button.vue_vue_type_style_index_0_lang.4ed993c7.js";import{_ as H,o as m,c as k,k as c,d as J,a4 as G,h as b,g as O,j as K,a5 as ss,C as $,a6 as es,a2 as as,e as F,H as o,w as y,t as Q,T as ts,b as U,r as ns,n as os,U as ls,l as D,Q as g,a as w,a1 as Y}from"./chunks/framework.c6b37a8b.js";import{u as rs}from"./chunks/index.c3f1570d.js";import{f as j}from"./chunks/base64.041d95b4.js";import{a as ps,b as cs,c as is}from"./chunks/index.4e947356.js";import{a as Z}from"./chunks/index.6fb61095.js";import{d as ds}from"./chunks/defu.573334b8.js";import{p as us}from"./chunks/index.f0554c3a.js";import{u as Es}from"./chunks/index.a9759927.js";import{p as ys}from"./chunks/Banner.354c05d8.js";import"./chunks/index.a3ecab28.js";import"./chunks/SpinnerRinggo.76282a62.js";import"./chunks/use-singleton.7934a853.js";import"./chunks/20.e6e48ea0.js";import"./chunks/16.43f23024.js";import"./chunks/Banner.vue_vue_type_style_index_0_lang.4ed993c7.js";const ms={},hs={xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",fill:"none",class:"persona-icon",viewBox:"0 0 16 16"},_s=c("path",{fill:"currentColor",d:"M5.743 2.44A6 6 0 0 1 14 7.935a.5.5 0 0 0 1-.01A7 7 0 0 0 2.722 3.401V1.5a.5.5 0 1 0-1 0v2.889a.5.5 0 0 0 .5.5h2.89a.5.5 0 1 0 0-1H3.63A6 6 0 0 1 5.743 2.44ZM9.945 13.676a6 6 0 0 1-7.944-5.755.5.5 0 0 0-1-.013 7 7 0 0 0 12.277 4.69V14.5a.5.5 0 1 0 1 0v-2.889a.5.5 0 0 0-.5-.5h-2.889a.5.5 0 0 0 0 1h1.482a6 6 0 0 1-2.426 1.565Z"},null,-1),vs=[_s];function gs(s,e){return m(),k("svg",hs,vs)}const fs=H(ms,[["render",gs]]),ks={},bs={xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",fill:"none",class:"persona-icon",viewBox:"0 0 24 24"},As=c("path",{fill:"currentColor","fill-rule":"evenodd",d:"M12 9.171a3.852 3.852 0 0 0-3.846 3.858A3.852 3.852 0 0 0 12 16.886a3.852 3.852 0 0 0 3.846-3.857A3.852 3.852 0 0 0 12 9.17ZM9.692 13.03A2.311 2.311 0 0 1 12 10.714a2.311 2.311 0 0 1 2.308 2.315A2.311 2.311 0 0 1 12 15.343a2.311 2.311 0 0 1-2.308-2.314Z","clip-rule":"evenodd"},null,-1),Cs=c("path",{fill:"currentColor","fill-rule":"evenodd",d:"M10.798 3c-.748 0-1.465.298-1.994.829l-2.25 2.257h-.708A3.852 3.852 0 0 0 2 9.943v7.2A3.852 3.852 0 0 0 5.846 21h12.308A3.852 3.852 0 0 0 22 17.143v-7.2a3.852 3.852 0 0 0-3.846-3.857h-.707l-2.251-2.258A2.816 2.816 0 0 0 13.202 3h-2.404Zm-.906 1.92a1.28 1.28 0 0 1 .906-.377h2.404c.34 0 .666.135.906.376l2.476 2.484c.145.144.34.226.544.226h1.026a2.31 2.31 0 0 1 2.308 2.314v7.2a2.31 2.31 0 0 1-2.308 2.314H5.846a2.311 2.311 0 0 1-2.308-2.314v-7.2a2.311 2.311 0 0 1 2.308-2.314h1.026c.204 0 .4-.082.544-.226l2.476-2.484Z","clip-rule":"evenodd"},null,-1),Ts=[As,Cs];function ws(s,e){return m(),k("svg",bs,Ts)}const qs=H(ks,[["render",ws]]),Ps={},Ss={xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",fill:"none",class:"persona-icon",viewBox:"0 0 24 24"},Fs=c("path",{fill:"currentColor",d:"M4.564 2.77a.77.77 0 0 0-1.538 0v4.102a.77.77 0 0 0 .769.769h4.102a.77.77 0 1 0 0-1.538H5.932a8.461 8.461 0 1 1-2.393 5.804.77.77 0 0 0-1.538-.017 10 10 0 1 0 2.563-6.576V2.769Z"},null,-1),Ds=[Fs];function xs(s,e){return m(),k("svg",Ss,Ds)}const Is=H(Ps,[["render",xs]]),Bs="/design-system/assets/shutter.9f40c7bb.wav";function L(s,e=!1){const a=document.createElement("canvas"),r=a.getContext("2d");return a.width=s.videoWidth,a.height=s.videoHeight,e?(r.save(),r.scale(-1,1),r.drawImage(s,0,0,a.width*-1,a.height),r.restore()):r.drawImage(s,0,0,a.width,a.height),a.toDataURL("image/jpeg")}const Vs={meta:{facingMode:"environment"},run({video:s,meta:e,modifier:a}){const r=!!(e.value.mirror&&e.value.mirror!=="preview"),l=L(s.value,r),t=a.value.base64?l:j(l);return{preview:l,result:t}}},Ms=J({components:{pButton:z,IconCamera:qs,IconRetake:Is,IconRotate:fs},directives:{pAspectRatio:us},props:{modelValue:{type:[globalThis.File,String,Array],default:""},modelModifiers:{type:Object,default:()=>({})},mirror:{type:[Boolean,String],default:void 0},mask:{type:String,default:void 0},adapter:{type:Object,default:Vs},facingMode:{type:String,default:void 0},silent:{type:Boolean,default:!1}},models:{prop:"modelValue",event:"update:modelValue"},emits:["start","change","result","update:modelValue"],setup(s,{emit:e}){const a=rs(s),r=G(s,"modelModifiers"),l=b(!1),t=b(!1),p=b(""),i=b(""),n=b(),h=b(),_=ps("camera",{controls:!0}),d=b(0),E=O(()=>ds({mirror:s.mirror,mask:s.mask,facingMode:s.facingMode},s.adapter.meta,{autoStart:!1})),{videoInputs:f}=cs({requestPermissions:!1,constraints:{video:{facingMode:E.value.facingMode}}}),q=O(()=>{var u,R;return(R=(u=f.value)==null?void 0:u.at(d.value))==null?void 0:R.deviceId}),T=O(()=>({video:{deviceId:q.value},audio:!1})),{stream:A,start:x,stop:I,enabled:B}=is({constraints:T}),V=O(()=>{const u=[];return E.value.mirror&&u.push("camera--mirror"),E.value.mask?u.push(`camera__mask--${E.value.mask}`):u.push("camera__mask--none"),u});async function P(){var u;_.state.value==="denied"&&await Z({title:"Camera Access Blocked",text:"Privy need to access your internal camera to process this journey",confirm:{text:"Ok"},footerAlign:"end"}),_.state.value==="prompt"&&await Z({title:"Camera Access Required",text:"Privy need to access your internal camera to process this journey",confirm:{text:"Ok"},footerAlign:"end"}),await x(),typeof((u=h.value)==null?void 0:u.play)=="function"&&await h.value.play()}function N(){d.value=(d.value+1)%f.value.length}function M(u){i.value=u}async function S(){var R;l.value=!0;const u=await s.adapter.run({video:h,toast:M,stream:A,meta:E,modifier:r});p.value=u.preview,a.value=u.result,t.value=!0,l.value=!1,B.value=!1,e("result",u.result),e("change",u.result),typeof((R=n.value)==null?void 0:R.play)=="function"&&n.value.play()}async function X(){B.value=!0,t.value=!1,p.value="",i.value=""}function W(){e("start",A.value),E.value.autoStart&&S()}return K(async()=>{_.isSupported&&(await Es(_.state).not.toBeUndefined(),await P())}),ss(()=>{I()}),{ShutterWav:Bs,classNames:V,cameras:f,video:h,shutter:n,stream:A,toggle:N,isActive:B,isTaken:t,isProcessing:l,message:i,take:S,retake:X,preview:p,turnOn:P,onStart:W,toast:M,deviceId:q,constraints:T}}});const Rs=["data-deviceid"],$s=[".srcObject"],Ns=["src"],Os={key:2,"data-testid":"camera-off",class:"camera__off-info"},Us={class:"camera__mask-container"},Ls={key:0,"data-testid":"camera-mask",class:"camera__mask"},Hs={"data-testid":"camera-toast",class:"camera__toast-text"},Qs={class:"camera__controls"},js=["src","muted"];function Ys(s,e,a,r,l,t){const p=$("icon-rotate"),i=$("p-button"),n=$("icon-camera"),h=$("icon-retake"),_=es("p-aspect-ratio");return as((m(),k("div",{class:os(["camera",s.classNames]),"data-testid":"camera","data-deviceid":s.deviceId},[s.stream?(m(),k("video",{key:0,ref:"video","data-testid":"camera-video",".srcObject":s.stream,class:"camera__video",autoplay:"",muted:"",playsinline:"",onPlay:e[0]||(e[0]=(...d)=>s.onStart&&s.onStart(...d))},null,40,$s)):F("",!0),s.isTaken&&!s.stream?(m(),k("img",{key:1,"data-testid":"camera-result",class:"camera__result",src:s.preview,alt:"camera-result"},null,8,Ns)):F("",!0),!s.isActive&&!s.isTaken?(m(),k("span",Os," Camera is off ")):F("",!0),c("div",Us,[s.isTaken?F("",!0):(m(),k("div",Ls))]),o(ts,{name:"slide-up"},{default:y(()=>[s.message?(m(),k("div",{key:s.message,class:"camera__toast"},[c("div",Hs,Q(s.message),1)])):F("",!0)]),_:1}),c("div",Qs,[s.cameras.length>1&&!s.isTaken?(m(),U(i,{key:0,"data-testid":"camera-toggle",color:"danger",size:"sm",icon:"",pill:"",onClick:s.toggle},{default:y(()=>[o(p)]),_:1},8,["onClick"])):F("",!0),!s.isActive&&!s.isTaken?(m(),U(i,{key:1,"data-testid":"camera-turn-on",class:"camera__main-control",color:"danger",icon:"",pill:"",onClick:e[1]||(e[1]=d=>s.turnOn())},{default:y(()=>[o(n)]),_:1})):s.isActive&&!s.isTaken?(m(),U(i,{key:2,"data-testid":"camera-take",class:"camera__main-control",color:"danger",icon:"",pill:"",disabled:s.isProcessing,onClick:e[2]||(e[2]=d=>s.take())},{default:y(()=>[o(n)]),_:1},8,["disabled"])):(m(),U(i,{key:3,"data-testid":"camera-retake",class:"camera__main-control",color:"danger",icon:"",pill:"",onClick:e[3]||(e[3]=d=>s.retake())},{default:y(()=>[o(h)]),_:1}))]),c("audio",{ref:"shutter",src:s.ShutterWav,muted:s.silent},null,8,js),ns(s.$slots,"default",{cameras:s.cameras,preview:s.preview,stream:s.stream,video:s.video,shutter:s.shutter,toast:s.toast})],10,Rs)),[[_,4/3,void 0,{fixed:!0}]])}const v=H(Ms,[["render",Ys]]),Zs=40,Xs=15,C=160;function Ws(s,e){const a=s.getContext("2d",{willReadFrequently:!0});return a.drawImage(e,e.videoWidth/2-C,e.videoHeight/2-C,C,C,0,0,C,C),a.getImageData(0,0,s.width,s.height)}function zs(s){const e=s.width/2,a=s.height/2,r=s.width/4,l=s.height/4,t=e-r/2,p=a-l/2,i=new Uint8ClampedArray(r*l),n={centerX:e,centerY:a,width:r,height:l,xPos:t,yPos:p,buffer:i},h=s.data;let _=0;for(let d=n.yPos;d<n.yPos+n.height;d++){let E=d*s.width*4+n.xPos*4+1;for(let f=n.xPos;f<n.xPos+n.width;f++)n.buffer[_++]=h[E],E+=4}return n}function Js(s,e){let a=0,r=0,l=0;const t=s.width/4,p=s.height/4,i=s.data;for(let T=e.centerY-p;T<=e.centerY+p-e.height;T++)for(let A=e.centerX-t;A<=e.centerX+t-e.width;A++){let x=0,I=0,B=0;for(let P=0;P<e.height;P++){let N=A*4+1+(T+P)*s.width*4;for(let M=0;M<e.width;M++){const S=i[N];x+=e.buffer[B++]*S,I+=S*S,N+=4}}let V=0;I>0&&(V=x*x/I),V>l&&(l=V,a=A,r=T)}const n=a-e.xPos,h=r-e.yPos,_=Math.sqrt(n*n+h*h),d=t-e.width/2,E=p-e.height/2,f=Math.sqrt(d*d+E*E);let q=_/f*100;return q>100&&(q=100),q}const Gs={meta:{mask:"round",mirror:!0,facingMode:"user"},async run({video:s,toast:e,meta:a,modifier:r}){return await new Promise(l=>{const t=!!(a.value.mirror&&a.value.mirror!=="preview"),p=L(s.value,t),i=document.createElement("canvas");i.width=C,i.height=C;let n;const h=setInterval(function(){if(s.value){const d=Ws(i,s.value);if(!n)n=zs(d);else if(Js(d,n)>Zs){const E=L(s.value,t),f=r.value.base64?[E,p]:[j(E),j(p)];clearInterval(h),e(""),l({preview:E,result:f})}}},1e3/Xs);e("Move your head slowly. Your photo will be taken automatically")})}},Ks={meta:{mask:"square",facingMode:"environment",autoStart:!0},async run({video:s,toast:e,meta:a}){const r=!!(a.value.mirror&&a.value.mirror!=="preview"),{BrowserQRCodeReader:l}=await ls(()=>import("./chunks/index.55ad3f9e.js"),[]),p=await new l().decodeOnceFromVideoElement(s.value),i=L(s.value,r),n=p.getText();return e(n),{preview:i,result:n}}},se=g('<h1 id="camera" tabindex="-1">Camera <a class="header-anchor" href="#camera" aria-label="Permalink to &quot;Camera&quot;">​</a></h1><blockquote><p>Take picture from user&#39;s camera</p></blockquote><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><h3 id="simple-usage" tabindex="-1">Simple Usage <a class="header-anchor" href="#simple-usage" aria-label="Permalink to &quot;Simple Usage&quot;">​</a></h3>',4),ee=g(`<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">p-camera</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">p-camera</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h2 id="mirror-mode" tabindex="-1">Mirror Mode <a class="header-anchor" href="#mirror-mode" aria-label="Permalink to &quot;Mirror Mode&quot;">​</a></h2><p>Add prop <code>mirror</code> to enable mirror mode.</p>`,3),ae=g(`<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">p-camera</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">mirror</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">p-camera</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">mirror</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h3 id="preview-only-mirror-mode" tabindex="-1">Preview-only mirror mode <a class="header-anchor" href="#preview-only-mirror-mode" aria-label="Permalink to &quot;Preview-only mirror mode&quot;">​</a></h3><p>If you want to keep image result un-mirrored. set prop <code>mirror</code> to <code>preview</code>. It will revert back when you take the picture.</p>`,3),te=g(`<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">p-camera</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">mirror</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;preview&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">p-camera</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">mirror</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;preview&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h2 id="masking" tabindex="-1">Masking <a class="header-anchor" href="#masking" aria-label="Permalink to &quot;Masking&quot;">​</a></h2><p>Add mask overlay using prop <code>mask</code>. There are 3 available masks <code>square</code>, <code>round</code>, <code>card</code>.</p>`,3),ne=g(`<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">p-camera</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">mask</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;square&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">p-camera</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">mask</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;round&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">p-camera</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">mask</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;card&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">p-camera</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">mask</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;square&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">p-camera</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">mask</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;round&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">p-camera</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">mask</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;card&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h2 id="silent" tabindex="-1">Silent <a class="header-anchor" href="#silent" aria-label="Permalink to &quot;Silent&quot;">​</a></h2><p>Add prop <code>silent</code> to disabled shutter sound.</p>`,3),oe=g(`<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">p-camera</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">silent</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">p-camera</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">silent</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h2 id="liveness" tabindex="-1">Liveness <a class="header-anchor" href="#liveness" aria-label="Permalink to &quot;Liveness&quot;">​</a></h2><p>Change adapter to Liveness to perform liveness capture.</p>`,3),le=g(`<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">p-camera</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">:adapter</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;LivenessAdapter&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setup</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { LivenessAdapter } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@privyid/persona/core&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">p-camera</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">:adapter</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;LivenessAdapter&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setup</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { LivenessAdapter } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@privyid/persona/core&#39;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h2 id="qr-scanner" tabindex="-1">QR Scanner <a class="header-anchor" href="#qr-scanner" aria-label="Permalink to &quot;QR Scanner&quot;">​</a></h2><p>This component has built-in adapter for QR Code Scanning, powered by <a href="https://github.com/zxing-js/library" target="_blank" rel="noreferrer">ZXing</a>.</p>`,3),re=g(`<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">p-camera</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">:adapter</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;QrCodeAdapter&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setup</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { QrCodeAdapter } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@privyid/persona/core&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">p-camera</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">:adapter</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;QrCodeAdapter&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setup</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { QrCodeAdapter } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@privyid/persona/core&#39;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h2 id="binding-v-model" tabindex="-1">Binding v-model <a class="header-anchor" href="#binding-v-model" aria-label="Permalink to &quot;Binding v-model&quot;">​</a></h2><p>You can bind the result of image using <code>v-model</code>. The result is variant depend on adapter do you use.</p>`,3),pe=g(`<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">p-camera</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">v-model</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;result&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">p-camera</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">v-model</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;result&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p><strong>result:</strong></p>`,2),ce={class:"truncate"},ie=c("h3",{id:"encode-to-base64",tabindex:"-1"},[w("Encode to base64 "),c("a",{class:"header-anchor",href:"#encode-to-base64","aria-label":'Permalink to "Encode to base64"'},"​")],-1),de=c("p",null,[w("You can add modifier "),c("code",null,"base64"),w(" to your "),c("code",null,"v-model"),w(", it's enforce result to "),c("a",{href:"https://en.wikipedia.org/wiki/Data_URI_scheme",target:"_blank",rel:"noreferrer"},"base64-dataURI"),w(".")],-1),ue=c("b",null,"Note!",-1),Ee=c("code",null,"v-model.base64",-1),ye=g(`<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">p-camera</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">v-model.base64</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;resultB64&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">p-camera</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">v-model.base64</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;resultB64&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p><strong>result:</strong></p>`,2),me={class:"truncate"},he=g('<h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table><thead><tr><th>Props</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th>Description</th></tr></thead><tbody><tr><td><code>mirror</code></td><td style="text-align:center;"><code>Boolean</code>, <code>String</code></td><td style="text-align:center;"><code>-</code></td><td>Enable mirror mode, set to <code>preview</code> for <a href="#preview-only-mirror-mode">Preview Only</a></td></tr><tr><td><code>mask</code></td><td style="text-align:center;"><code>String</code></td><td style="text-align:center;"><code>-</code></td><td>Enable mask overlay, valid value is <code>square</code>, <code>round</code>, <code>card</code>, <code>none</code></td></tr><tr><td><code>silent</code></td><td style="text-align:center;"><code>Boolean</code></td><td style="text-align:center;"><code>false</code></td><td>Mute shutter sound</td></tr><tr><td><code>adapter</code></td><td style="text-align:center;"><code>Adapter</code></td><td style="text-align:center;"><code>CaptureAdapter</code></td><td>Camera Adapter</td></tr><tr><td><code>modelValue</code></td><td style="text-align:center;"><code>File</code></td><td style="text-align:center;"><code>-</code></td><td>v-model value</td></tr></tbody></table><h3 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;Slots&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td colspan="2" class="text-center">There no slots here</td></tr></tbody></table><h3 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h3><table><thead><tr><th>Name</th><th style="text-align:center;">Arguments</th><th>Description</th></tr></thead><tbody><tr><td><code>start</code></td><td style="text-align:center;">-</td><td>Event when camera started</td></tr><tr><td><code>result</code></td><td style="text-align:center;">-</td><td>Event when camera captured image</td></tr></tbody></table>',7),Ve=JSON.parse(`{"title":"Camera · Components","description":"Take picture from user's camera","frontmatter":{"title":"Camera · Components","description":"Take picture from user's camera"},"headers":[],"relativePath":"components/camera/index.md","filePath":"components/camera/index.md"}`),_e={name:"components/camera/index.md"},Me=Object.assign(_e,{setup(s){const e=b(),a=b();return(r,l)=>{const t=$("preview");return m(),k("div",null,[se,o(t,{class:"flex-col"},{default:y(()=>[o(v)]),_:1}),ee,o(t,{class:"flex-col"},{default:y(()=>[o(v,{mirror:""})]),_:1}),ae,o(t,{class:"flex-col"},{default:y(()=>[o(v,{mirror:"preview"})]),_:1}),te,o(t,{class:"flex-col space-y-2"},{default:y(()=>[o(v,{mask:"square"}),o(v,{mask:"round"}),o(v,{mask:"card"})]),_:1}),ne,o(t,{class:"flex-col"},{default:y(()=>[o(v,{silent:""})]),_:1}),oe,o(t,{class:"flex-col space-y-2"},{default:y(()=>[o(v,{adapter:D(Gs)},null,8,["adapter"])]),_:1}),le,o(t,{class:"flex-col space-y-2"},{default:y(()=>[o(v,{adapter:D(Ks)},null,8,["adapter"])]),_:1}),re,o(t,{class:"flex-col"},{default:y(()=>[o(v,{modelValue:D(e),"onUpdate:modelValue":l[0]||(l[0]=p=>Y(e)?e.value=p:null)},null,8,["modelValue"])]),_:1}),pe,c("pre",ce,[c("code",null,Q(D(e)),1)]),ie,de,o(ys,{dismissable:!1},{default:y(()=>[ue,w(),Ee,w(" on QRCodeAdapter has no effect, the result will always original scanned text. ")]),_:1}),o(t,{class:"flex-col"},{default:y(()=>[o(v,{modelValue:D(a),"onUpdate:modelValue":l[1]||(l[1]=p=>Y(a)?a.value=p:null),modelModifiers:{base64:!0}},null,8,["modelValue"])]),_:1}),ye,c("pre",me,[c("code",null,Q(D(a)),1)]),he])}}});export{Ve as __pageData,Me as default};
