import{s as i}from"./chunks/index.DJOEjXNg.js";import{_ as a}from"./chunks/Card.vue_vue_type_style_index_0_lang.DwbnQwzw.js";import{_ as e}from"./chunks/Button.vue_vue_type_script_setup_true_lang.Ci1hEc_s.js";import"./chunks/Button.vue_vue_type_style_index_0_lang.l0sNRNKZ.js";import{c as n,m as o,J as l,w as p,p as h,aa as t,o as d,b as r}from"./chunks/framework.BSGfltUV.js";import"./chunks/use-singleton.C_NxxXgo.js";import"./chunks/queue.CxBKXn5n.js";import"./chunks/noop.DX6rZLP_.js";import"./chunks/16.M8CKvk-y.js";import"./chunks/Heading.vue_vue_type_script_setup_true_lang.snr92cTu.js";import"./chunks/Heading.vue_vue_type_style_index_0_lang.l0sNRNKZ.js";import"./chunks/index.DvWHfs5K.js";import"./chunks/SpinnerRinggo.vue_vue_type_script_setup_true_lang.CBPJZ4Rn.js";const c=t('<h1 id="notify" tabindex="-1">Notify <a class="header-anchor" href="#notify" aria-label="Permalink to &quot;Notify&quot;">​</a></h1><blockquote><p>Low-Level component for <a href="./../popup/">Popup</a> and <a href="./../toast/">Toast</a>.</p></blockquote><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><h3 id="simple-usage" tabindex="-1">Simple Usage <a class="header-anchor" href="#simple-usage" aria-label="Permalink to &quot;Simple Usage&quot;">​</a></h3>',4),k={class:"flex mt-3"},E=t(`<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pCard </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;#components&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { notify } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@privyid/persona/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">notify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  component: pCard,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  props    : {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    title      : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello World&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    class      : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;w-[300px]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    callout    : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dismissable: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  duration : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  position : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bottom-left&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-label="Permalink to &quot;Variables&quot;">​</a></h2><p>Toast use local CSS variables on <code>.notify-container</code> for enhanced real-time customization.</p><div class="language-sass vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sass</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">--p-notify-z-index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">theme(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zIndex.notify</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//1090</span></span></code></pre></div><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="notify-1" tabindex="-1">notify <a class="header-anchor" href="#notify-1" aria-label="Permalink to &quot;notify&quot;">​</a></h3><p><code>notify(options: PopupOptions): Promise&lt;NotifyInstance&gt;</code></p><table><thead><tr><th>Options</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th>Description</th></tr></thead><tbody><tr><td><code>component</code></td><td style="text-align:center;"><code>Component</code></td><td style="text-align:center;"><code>-</code></td><td>Notify item component</td></tr><tr><td><code>props</code></td><td style="text-align:center;"><code>Object</code></td><td style="text-align:center;"><code>-</code></td><td>Notify item props</td></tr><tr><td><code>duration</code></td><td style="text-align:center;"><code>Number</code></td><td style="text-align:center;"><code>3000</code></td><td>Duration for which the popup should be displayed. <code>-1</code> to permanent popup</td></tr><tr><td><code>position</code></td><td style="text-align:center;"><code>String</code></td><td style="text-align:center;"><code>bottom-left</code></td><td>Position for popup, valid value is <code>top-left</code>, <code>top-center</code>, <code>top-right</code>, <code>bottom-left</code>, <code>bottom-center</code>, <code>top-right</code></td></tr></tbody></table><h2 id="see-also" tabindex="-1">See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;See Also&quot;">​</a></h2><ul><li><a href="./../toast/">Toast</a></li><li><a href="./../popup/">Popup</a></li></ul>`,10),S=JSON.parse('{"title":"Notify · Components","description":"Low level component for Popup and Toast.","frontmatter":{"title":"Notify · Components","description":"Low level component for Popup and Toast."},"headers":[],"relativePath":"components/notify/index.md","filePath":"components/notify/index.md"}'),y={name:"components/notify/index.md"},D=Object.assign(y,{setup(m){return(g,s)=>(d(),n("div",null,[c,o("div",k,[l(e,{color:"info",onClick:s[0]||(s[0]=u=>h(i)({component:a,props:{title:"Hello World",class:"w-[300px]",callout:!0,dismissable:!0},duration:3e3,position:"bottom-left"}))},{default:p(()=>[r(" Show Notify ")]),_:1})]),E]))}});export{S as __pageData,D as default};
